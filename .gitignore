Stack - shi ar unda agemateboddes 1MB s!
heap - sheuzgudavi , unda mivutitot spec. brzanebit  ra mexsierebis bloki gamoyos , info ro wavikitxot blokidan unda vicodet nulovani elementis misamarti !
int a ro vwert nishnavs ro gamoiyofa int is blokebi (4 byte - 4 bloki) 0123 4567 - int a s misamarti iqneba 0 int b s misamarti iqneba 4. 
arsebobs specialuri struqtura sadac sheileba shevinaxot misamartebi , amisatvis gamoiyeneba pointeri int tipis pointeri anu int*p! 
malloc gcvchirdeba dinamiuri masivebis shesaqmnelad ! malloc(400) ! malloc - gamoyofs heap shi mexsierebas , int *a = (*int)malloc(400);(gadyaavs int titpis pointerad * ro movacilot gadaakomendirebs shignit! anu pointershi rac ricxvia imas int tipad daakopirebs)
malloc abrunebs pointers ! define pointers ! mexsierebis blokshi mushaoba gvinda - tu int is gvinda abrunebs ints ! 
shegvidzlia gavzardot da ashevamcirot gamoyofili bloki ! 400 nishnavs 400 byte s ! tu double gvaqvs int is magivrad abrunebs 8 ian pointers ! 
a++; izrdeba misamartit tu int ia 4 it tu doublia 8 it tu charia 1 it ! double - viyenebt magali precision ricxvebis dros , magali sizustis ricvxvic ro ikos
da paxodu didi ricxvic ro ikos ! 
for(int i = 0; i = 100; i++)
*(a+1) = rand % 100; - masivisa gareshe vmushaobt am shemxtevvashi ! gansazgvrul mocanamebtan roca ar gvaq saqme jobs masivis magivrad es gamovuiyenot !
int *a = (*int)malloc(100*sizeof(int));
*(a + 5) = 6 igivea rac a[5] = 6; gansxvaveba isaa ro meoreshi shezguduli vart 1MB shi da magitom ar vwert ! anu heapshi meorenairi ar iwereba !


int a = 5;

	int *p = &a;
mocemulia a s mnishvneloba roca a s davuwert &-s mashin aigebs a s misamarts ! 5896456 aris ubralod misamarti anu is rac consoleshi gamoaq ! 
masivis misamarti igivea rac masivi nulovani elementis misamarti , tito elementis misamarti iqneba gansxvavebuli 4-4 baitit ! mexsierebashi ertmanettan 
dashorebulia 4-4 baitit ! INT ro davweret magitom izrdeba 4 it ! DOUBLE shemtxvevashi 8 it gaizdeboda ! CHAR is shemtxvevashi 1 it da ase shemdeg !
roca pointers vzrdit 1 it am shemxtevvashi m s ( anu masivis pointers) shemdegi elementi iqneba 1 it anu 1*4 it gaizrdeba igivenairad ! 
mag: m+5 igivea 5*4 baitze anu iqneba m[5] anu 20 it meti vidre iyo m[0] ! roca vwert &m s gviugdebs misamarts roca vwert *m s mnishvneloba gamoaq
0-856 10 obit sistemashi 
0 - FF 16 obiti ! 
16 obitshi 10 aginishneba A
11 - B
12 - C
13 - D
14 - E
15 - F







|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

#include <stdlib.h>
#include <stdio.h>


main(){

	
	
	

	int m[100];
	
	
	for (int i = 0; i < 100; i++)
	{ 
		m[i] = rand() % 100;

		
	}
	for (int i = 0; i < 100; i++) {
		printf("t[%02d] value = %02d , adress = %x\n", i, m[i], &m[i]);
	}
		

	

	
	getchar();
}

zeda davaleba : avigot masivi 100elementiani shevavsot rand ricxvebit da gamovitanot es ricxvebi da mati misamartebi 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

#include <stdlib.h>
#include <stdio.h>


	main()
	{
		srand(time(NULL));

		int min = 1000;
		int min_index = 0;
		int max = 0;
		int max_index = 0;


		
		int m[100];

		for (int i = 0; i < 100; i++) {
			m[i] = rand() % 1000;
		}

		for (int i = 0; i < 100; i++) {
			if (m[i] > max) {
			max = m[i];	
			}
			if (m[i] < min) {
				min = m[i];
				min_index = i;
			}
		}

		printf("min: %03d\nmin adress: %x\nmax: %03d\nmax adress: %x", min, &m[min_index], max, &m[max_index]);

	getchar();
}

zeda davaleba : avigot masivi 100 elementiani sheavset shemxtevviti ricxvebit ipovet min da max mnishvnelobebi da am min da max is misamartebi ! 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <stdlib.h>
#include <time.h>


main()
{
	srand(time(NULL));
	int m[100];
	int i = 0;
	
	for (i = 0; i < 100; i++) {
		int r = rand() % 100;
		m[i] = r;
		if (r % 3 == 0) {
			printf("%d - %d\n ", m[i],&m[i]);
		}

		
	}

	getchar();
		
}

// avigot 100 elementiani masivi sheavset shemxtveviti ricvebit da gamotanet mxolod im  ricxvebis misamartebi romlebic arian 3 is jeradebi !

#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <stdlib.h> 
#include <conio.h>
int isprime(int number) {
	int k = 2;
	int i = 1;
	while (k <= number / 2) {
		if (number % k == 0) {
			i = 0;
			break;
		}
		k++;
	}

	return i;
}


main()
{
	int m[100];
	int i = 0;
	int r = 0;
	while (i < 100)
	{
		r = rand() % 100;
		if (isprime(r)) {
			m[i] = r;

			if ((r + 1) % 3 == 0) {
				printf("%02d = %d\n", m[i], &m[i]);
			}
			i++;
		}
	}
	getchar();
}

zeda : shevavasot 100 elementiani masivi martivi ricxevbit da gamovitanot iseti ricxvebis misamartebi romelsacd damatebuli 1 iqneba 3 is jeradi ! 
